<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >

    <Style x:Key="BaseButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource MediumBaseBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="FontSize" Value="{StaticResource Regular}" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="brd"
                        Background="{TemplateBinding Background}"
                        CornerRadius="2">
                        <ContentPresenter
                            Margin="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" Value="{StaticResource MediumBaseBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource LightBaseBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource UltraLightBaseBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource DarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Кнопка "Закрыть"-->
    <Style x:Key="CloseButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        CornerRadius="1"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="2">
                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="#E72F2F"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#E72F2F" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#F38989" />
                            <Setter Property="BorderBrush" Value="#F38989"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.ExitActions/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RollUpButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="RollUpButton" Grid.Column="0" Background="Transparent">
                        <Rectangle  Grid.Column="0" Width="15" Height="2" RadiusX="1" RadiusY="1">
                            <Rectangle.Style>
                                <Style TargetType="Rectangle">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Fill" Value="White"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=IsMouseOver}" Value="False">
                                            <Setter Property="Fill" Value="#B2B2B2"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftTabButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path Fill="White" Data="M10 10H0C5.52285 10 10 5.52285 10 0V10Z" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                        <Border Background ="{TemplateBinding Background}" CornerRadius=" 0 0 10 0">
                            <TextBlock Foreground="White" Text="{TemplateBinding Content}"  FontSize="{StaticResource Small}" FontFamily="{StaticResource BaseFont}" FontWeight="Medium" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Background" Value="{StaticResource TransparentBlackBack}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#F2292B38" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#F2444757" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RightTabButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path Fill="White" Data="M0 10H10C4.47705 10 0 5.52283 0 0V10Z" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                        <Border Background ="{TemplateBinding Background}" CornerRadius=" 0 0 0 10">
                            <TextBlock Foreground="White" Text="{TemplateBinding Content}"  FontSize="{StaticResource Small}" FontFamily="{StaticResource BaseFont}" FontWeight="Medium" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Background" Value="{StaticResource TransparentBlackBack}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#F2292B38" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#F2444757" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MiddleTabButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource TransparentBlackBack}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background ="{TemplateBinding Background}" BorderThickness="0.5 0 0.5 0" BorderBrush="White">
                            <TextBlock Foreground="White" Text="{TemplateBinding Content}"  FontSize="{StaticResource Small}" FontFamily="{StaticResource BaseFont}" FontWeight="Medium" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Background" Value="{StaticResource TransparentBlackBack}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#F2292B38" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#F2444757" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>